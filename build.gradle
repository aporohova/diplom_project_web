plugins {
    id 'java-library'
    id ("io.qameta.allure") version "2.11.2"
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'com.automationexercise'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

allure {
    report {
        version.set("2.22.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.22.0")
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:6.13.1",
            "org.junit.jupiter:junit-jupiter:5.9.3",
            "com.github.javafaker:javafaker:1.0.2",
            "org.slf4j:slf4j-simple:2.0.5",
            "io.qameta.allure:allure-selenide:2.22.0",
            'io.rest-assured:rest-assured:5.3.0',
            "io.rest-assured:json-schema-validator:5.3.0",
            "io.qameta.allure:allure-rest-assured:2.21.0",
            "org.aeonbits.owner:owner:1.0.12")
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}
//tasks.withType(JavaCompile).configureEach() {
//    options.encoding = 'UTF-8'
//}
compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}
//test {
//    useJUnitPlatform()
//    systemProperties(System.getProperties())
//}
//task smoke(type: Test) {
//    useJUnitPlatform {
//        includeTags("smoke")
//    }
//}
tasks.withType(Test).configureEach {
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}